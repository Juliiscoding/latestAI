-- Snowflake Permission Fix Script
-- This script will grant the necessary permissions to access ACCOUNT_USAGE and create views

-- 1. Make sure we're using ACCOUNTADMIN role
USE ROLE ACCOUNTADMIN;

-- 2. Grant access to SNOWFLAKE database (which contains ACCOUNT_USAGE schema)
GRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE TO ROLE ACCOUNTADMIN;
GRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE TO ROLE MERCURIOS_ADMIN;

-- 3. Create a simpler monitoring view first to test permissions
CREATE OR REPLACE VIEW MERCURIOS_DATA.PUBLIC.simple_warehouse_monitoring AS
SELECT 
    WAREHOUSE_NAME,
    COUNT(*) AS query_count
FROM SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY
WHERE START_TIME >= DATEADD(day, -7, CURRENT_TIMESTAMP())
GROUP BY 1;

-- 4. Check if the view was created
SHOW VIEWS IN MERCURIOS_DATA.PUBLIC;

-- 5. If the simple view works, try creating the full monitoring view
CREATE OR REPLACE VIEW MERCURIOS_DATA.PUBLIC.warehouse_cost_monitoring AS
SELECT
    WAREHOUSE_NAME,
    DATE_TRUNC('day', START_TIME) AS usage_date,
    COUNT(*) AS query_count,
    SUM(EXECUTION_TIME) / 1000 / 60 / 60 AS execution_hours,
    SUM(CREDITS_USED) AS credits_used,
    AVG(EXECUTION_TIME) / 1000 AS avg_execution_seconds,
    MAX(EXECUTION_TIME) / 1000 AS max_execution_seconds
FROM SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY
WHERE START_TIME >= DATEADD(month, -1, CURRENT_TIMESTAMP())
GROUP BY 1, 2
ORDER BY usage_date DESC, credits_used DESC;

-- 6. Create the query cost by type view
CREATE OR REPLACE VIEW MERCURIOS_DATA.PUBLIC.query_cost_by_type AS
SELECT
    QUERY_TYPE,
    COUNT(*) AS query_count,
    SUM(CREDITS_USED) AS total_credits,
    AVG(CREDITS_USED) AS avg_credits_per_query,
    SUM(CREDITS_USED) / SUM(SUM(CREDITS_USED)) OVER () * 100 AS percentage_of_total
FROM SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY
WHERE START_TIME >= DATEADD(month, -1, CURRENT_TIMESTAMP())
AND CREDITS_USED > 0
GROUP BY QUERY_TYPE
ORDER BY total_credits DESC;

-- 7. Create the expensive queries view
CREATE OR REPLACE VIEW MERCURIOS_DATA.PUBLIC.expensive_queries AS
SELECT
    QUERY_ID,
    QUERY_TEXT,
    DATABASE_NAME,
    SCHEMA_NAME,
    QUERY_TYPE,
    USER_NAME,
    WAREHOUSE_NAME,
    EXECUTION_TIME / 1000 AS execution_seconds,
    CREDITS_USED,
    START_TIME
FROM SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY
WHERE START_TIME >= DATEADD(day, -7, CURRENT_TIMESTAMP())
AND CREDITS_USED > 0.1
ORDER BY CREDITS_USED DESC
LIMIT 100;

-- 8. Grant access to the views for the MERCURIOS_FIVETRAN_USER role
GRANT SELECT ON VIEW MERCURIOS_DATA.PUBLIC.simple_warehouse_monitoring TO ROLE MERCURIOS_FIVETRAN_USER;
GRANT SELECT ON VIEW MERCURIOS_DATA.PUBLIC.warehouse_cost_monitoring TO ROLE MERCURIOS_FIVETRAN_USER;
GRANT SELECT ON VIEW MERCURIOS_DATA.PUBLIC.query_cost_by_type TO ROLE MERCURIOS_FIVETRAN_USER;
GRANT SELECT ON VIEW MERCURIOS_DATA.PUBLIC.expensive_queries TO ROLE MERCURIOS_FIVETRAN_USER;

-- 9. Verify that the views were created
SHOW VIEWS IN MERCURIOS_DATA.PUBLIC;
