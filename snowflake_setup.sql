-- Mercurios.ai Snowflake Setup Script

-- Step 1: Create warehouses for different workloads
CREATE WAREHOUSE IF NOT EXISTS MERCURIOS_LOADING_WH
  WITH WAREHOUSE_SIZE = 'MEDIUM'
  AUTO_SUSPEND = 300
  AUTO_RESUME = TRUE
  INITIALLY_SUSPENDED = TRUE;

CREATE WAREHOUSE IF NOT EXISTS MERCURIOS_ANALYTICS_WH
  WITH WAREHOUSE_SIZE = 'LARGE'
  AUTO_SUSPEND = 600
  AUTO_RESUME = TRUE
  INITIALLY_SUSPENDED = TRUE;

CREATE WAREHOUSE IF NOT EXISTS MERCURIOS_DEV_WH
  WITH WAREHOUSE_SIZE = 'SMALL'
  AUTO_SUSPEND = 120
  AUTO_RESUME = TRUE
  INITIALLY_SUSPENDED = TRUE;

-- Step 2: Create database and schemas
CREATE DATABASE IF NOT EXISTS MERCURIOS_DATA;

USE DATABASE MERCURIOS_DATA;

CREATE SCHEMA IF NOT EXISTS RAW;
CREATE SCHEMA IF NOT EXISTS STANDARD;
CREATE SCHEMA IF NOT EXISTS ANALYTICS;

-- Step 3: Create roles for different access levels
CREATE ROLE IF NOT EXISTS MERCURIOS_ADMIN;
CREATE ROLE IF NOT EXISTS MERCURIOS_DEVELOPER;
CREATE ROLE IF NOT EXISTS MERCURIOS_ANALYST;
CREATE ROLE IF NOT EXISTS MERCURIOS_FIVETRAN_SERVICE;

-- Step 4: Grant privileges to roles
GRANT USAGE ON WAREHOUSE MERCURIOS_LOADING_WH TO ROLE MERCURIOS_ADMIN;
GRANT USAGE ON WAREHOUSE MERCURIOS_ANALYTICS_WH TO ROLE MERCURIOS_ADMIN;
GRANT USAGE ON WAREHOUSE MERCURIOS_DEV_WH TO ROLE MERCURIOS_ADMIN;

GRANT USAGE ON WAREHOUSE MERCURIOS_DEV_WH TO ROLE MERCURIOS_DEVELOPER;
GRANT USAGE ON WAREHOUSE MERCURIOS_ANALYTICS_WH TO ROLE MERCURIOS_ANALYST;
GRANT USAGE ON WAREHOUSE MERCURIOS_LOADING_WH TO ROLE MERCURIOS_FIVETRAN_SERVICE;

GRANT ALL ON DATABASE MERCURIOS_DATA TO ROLE MERCURIOS_ADMIN;
GRANT USAGE ON DATABASE MERCURIOS_DATA TO ROLE MERCURIOS_DEVELOPER;
GRANT USAGE ON DATABASE MERCURIOS_DATA TO ROLE MERCURIOS_ANALYST;
GRANT USAGE ON DATABASE MERCURIOS_DATA TO ROLE MERCURIOS_FIVETRAN_SERVICE;

GRANT ALL ON SCHEMA MERCURIOS_DATA.RAW TO ROLE MERCURIOS_ADMIN;
GRANT ALL ON SCHEMA MERCURIOS_DATA.STANDARD TO ROLE MERCURIOS_ADMIN;
GRANT ALL ON SCHEMA MERCURIOS_DATA.ANALYTICS TO ROLE MERCURIOS_ADMIN;

GRANT USAGE, CREATE TABLE ON SCHEMA MERCURIOS_DATA.RAW TO ROLE MERCURIOS_DEVELOPER;
GRANT USAGE, CREATE TABLE ON SCHEMA MERCURIOS_DATA.STANDARD TO ROLE MERCURIOS_DEVELOPER;
GRANT USAGE, CREATE TABLE ON SCHEMA MERCURIOS_DATA.ANALYTICS TO ROLE MERCURIOS_DEVELOPER;

GRANT USAGE ON SCHEMA MERCURIOS_DATA.ANALYTICS TO ROLE MERCURIOS_ANALYST;
GRANT SELECT ON ALL TABLES IN SCHEMA MERCURIOS_DATA.ANALYTICS TO ROLE MERCURIOS_ANALYST;

GRANT USAGE ON SCHEMA MERCURIOS_DATA.RAW TO ROLE MERCURIOS_FIVETRAN_SERVICE;
GRANT CREATE TABLE, INSERT, UPDATE, DELETE ON SCHEMA MERCURIOS_DATA.RAW TO ROLE MERCURIOS_FIVETRAN_SERVICE;

-- Step 5: Create Fivetran service user
CREATE USER IF NOT EXISTS FIVETRAN_SERVICE
  PASSWORD = 'ChangeThisToSecurePassword123!'
  DEFAULT_ROLE = MERCURIOS_FIVETRAN_SERVICE
  DEFAULT_WAREHOUSE = MERCURIOS_LOADING_WH;

GRANT ROLE MERCURIOS_FIVETRAN_SERVICE TO USER FIVETRAN_SERVICE;

-- Step 6: Create row access policies for multi-tenancy
-- This will be applied to tables that contain tenant data
CREATE OR REPLACE ROW ACCESS POLICY tenant_isolation_policy
    AS (tenant_id VARCHAR) RETURNS BOOLEAN ->
    current_role() IN ('MERCURIOS_ADMIN')
    OR EXISTS (
        SELECT 1 FROM MERCURIOS_DATA.STANDARD.USER_TENANT_MAPPING
        WHERE USER_TENANT_MAPPING.user_role = current_role()
        AND USER_TENANT_MAPPING.tenant_id = tenant_id
    );

-- Note: We'll create the USER_TENANT_MAPPING table later when we implement the tenant management system

-- Step 7: Create future grants for new tables
GRANT SELECT ON FUTURE TABLES IN SCHEMA MERCURIOS_DATA.ANALYTICS TO ROLE MERCURIOS_ANALYST;
GRANT ALL ON FUTURE TABLES IN SCHEMA MERCURIOS_DATA.RAW TO ROLE MERCURIOS_ADMIN;
GRANT ALL ON FUTURE TABLES IN SCHEMA MERCURIOS_DATA.STANDARD TO ROLE MERCURIOS_ADMIN;
GRANT ALL ON FUTURE TABLES IN SCHEMA MERCURIOS_DATA.ANALYTICS TO ROLE MERCURIOS_ADMIN;

-- Step 8: Assign roles to your account admin
GRANT ROLE MERCURIOS_ADMIN TO USER ACCOUNTADMIN;
