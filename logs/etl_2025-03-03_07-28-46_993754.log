2025-03-03 07:28:47.214 | INFO     | data_quality.base_monitor:__init__:33 - Initialized Completeness Monitor data quality monitor
2025-03-03 07:28:47.214 | INFO     | data_quality.manager:add_monitor:88 - Added Completeness Monitor to data quality manager
2025-03-03 07:28:47.214 | INFO     | data_quality.base_monitor:__init__:33 - Initialized Outlier Monitor data quality monitor
2025-03-03 07:28:47.214 | INFO     | data_quality.manager:add_monitor:88 - Added Outlier Monitor to data quality manager
2025-03-03 07:28:47.214 | INFO     | data_quality.base_monitor:__init__:33 - Initialized Consistency Monitor data quality monitor
2025-03-03 07:28:47.215 | INFO     | data_quality.manager:add_monitor:88 - Added Consistency Monitor to data quality manager
2025-03-03 07:28:47.215 | INFO     | data_quality.manager:__init__:45 - Initialized data quality manager with 3 monitors
2025-03-03 07:28:47.215 | INFO     | prediction.engine:_initialize_data_quality_manager:71 - Initialized data quality manager
2025-03-03 07:28:47.215 | INFO     | prediction.engine:__init__:60 - Initialized prediction engine
2025-03-03 07:28:47.215 | INFO     | prediction.models.base_model:__init__:35 - Initialized ARIMA prediction model
2025-03-03 07:28:47.216 | INFO     | prediction.models.base_model:__init__:35 - Initialized LeadTimePrediction prediction model
2025-03-03 07:28:47.216 | INFO     | prediction.engine:initialize_models:146 - Initialized 2 prediction models
2025-03-03 07:28:47.216 | INFO     | prediction.engine:check_data_quality:88 - Checking data quality for demand data
2025-03-03 07:28:47.216 | INFO     | data_quality.manager:run_monitors:123 - Running Completeness Monitor
2025-03-03 07:28:47.216 | ERROR    | data_quality.manager:run_monitors:142 - Error running Completeness Monitor: The truth value of a Index is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2025-03-03 07:28:47.216 | INFO     | data_quality.manager:run_monitors:123 - Running Outlier Monitor
2025-03-03 07:28:47.217 | INFO     | data_quality.manager:run_monitors:140 - Outlier Monitor completed with 0 alerts
2025-03-03 07:28:47.217 | INFO     | data_quality.manager:run_monitors:123 - Running Consistency Monitor
2025-03-03 07:28:47.217 | INFO     | data_quality.manager:run_monitors:140 - Consistency Monitor completed with 0 alerts
2025-03-03 07:28:47.217 | INFO     | data_quality.manager:save_results:210 - Saved data quality results to data_quality_reports/data_quality_demand_20250303_072847.json
2025-03-03 07:28:47.217 | INFO     | prediction.engine:train_model:179 - Training model: demand_forecast
2025-03-03 07:28:47.218 | INFO     | prediction.models.time_series:train:110 - Using auto-ARIMA to find optimal parameters
2025-03-03 07:28:55.974 | INFO     | prediction.models.time_series:train:130 - Auto-ARIMA selected parameters: p=1, d=1, q=1
2025-03-03 07:28:55.974 | INFO     | prediction.models.time_series:train:132 - Seasonal parameters: P=1, D=0, Q=1, s=7
2025-03-03 07:28:55.981 | INFO     | prediction.models.time_series:save:263 - ARIMA model saved to models/demand_forecast.pkl
2025-03-03 07:28:55.981 | INFO     | prediction.engine:train_model:184 - Model demand_forecast trained and saved
2025-03-03 07:28:55.982 | INFO     | prediction.engine:check_data_quality:88 - Checking data quality for lead_time data
2025-03-03 07:28:55.982 | INFO     | data_quality.manager:run_monitors:123 - Running Completeness Monitor
2025-03-03 07:28:55.982 | CRITICAL | data_quality.base_monitor:add_alert:122 - Data quality alert: quantity_completeness = 0.948 < 0.95
2025-03-03 07:28:55.982 | ERROR    | data_quality.manager:run_monitors:142 - Error running Completeness Monitor: The truth value of a Index is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2025-03-03 07:28:55.982 | INFO     | data_quality.manager:run_monitors:123 - Running Outlier Monitor
2025-03-03 07:28:55.984 | INFO     | data_quality.manager:run_monitors:140 - Outlier Monitor completed with 0 alerts
2025-03-03 07:28:55.984 | INFO     | data_quality.manager:run_monitors:123 - Running Consistency Monitor
2025-03-03 07:28:55.985 | ERROR    | data_quality.base_monitor:add_alert:124 - Data quality alert: delivery_after_order_violation_ratio = 0.016 > 0.0
2025-03-03 07:28:55.985 | INFO     | data_quality.manager:run_monitors:140 - Consistency Monitor completed with 1 alerts
2025-03-03 07:28:55.985 | INFO     | data_quality.manager:save_results:210 - Saved data quality results to data_quality_reports/data_quality_lead_time_20250303_072855.json
2025-03-03 07:28:55.985 | INFO     | prediction.engine:train_model:179 - Training model: lead_time
2025-03-03 07:28:55.991 | ERROR    | prediction.models.lead_time:train:188 - Error training lead time prediction model: Input X contains NaN.
RandomForestRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-03-03 07:28:55.992 | INFO     | prediction.engine:check_data_quality:88 - Checking data quality for demand data
2025-03-03 07:28:55.992 | INFO     | data_quality.manager:run_monitors:123 - Running Completeness Monitor
2025-03-03 07:28:55.992 | ERROR    | data_quality.manager:run_monitors:142 - Error running Completeness Monitor: The truth value of a Index is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2025-03-03 07:28:55.992 | INFO     | data_quality.manager:run_monitors:123 - Running Outlier Monitor
2025-03-03 07:28:55.992 | INFO     | data_quality.manager:run_monitors:140 - Outlier Monitor completed with 0 alerts
2025-03-03 07:28:55.993 | INFO     | data_quality.manager:run_monitors:123 - Running Consistency Monitor
2025-03-03 07:28:55.993 | INFO     | data_quality.manager:run_monitors:140 - Consistency Monitor completed with 1 alerts
2025-03-03 07:28:55.993 | INFO     | data_quality.manager:save_results:210 - Saved data quality results to data_quality_reports/data_quality_demand_20250303_072855.json
2025-03-03 07:28:55.993 | INFO     | prediction.engine:train_model:179 - Training model: demand_forecast
2025-03-03 07:28:55.994 | INFO     | prediction.models.time_series:train:110 - Using auto-ARIMA to find optimal parameters
2025-03-03 07:29:04.924 | INFO     | prediction.models.time_series:train:130 - Auto-ARIMA selected parameters: p=1, d=1, q=1
2025-03-03 07:29:04.924 | INFO     | prediction.models.time_series:train:132 - Seasonal parameters: P=1, D=0, Q=1, s=7
2025-03-03 07:29:04.931 | INFO     | prediction.models.time_series:save:263 - ARIMA model saved to models/demand_forecast.pkl
2025-03-03 07:29:04.931 | INFO     | prediction.engine:train_model:184 - Model demand_forecast trained and saved
2025-03-03 07:29:04.932 | INFO     | prediction.engine:check_data_quality:88 - Checking data quality for lead_time data
2025-03-03 07:29:04.932 | INFO     | data_quality.manager:run_monitors:123 - Running Completeness Monitor
2025-03-03 07:29:04.932 | CRITICAL | data_quality.base_monitor:add_alert:122 - Data quality alert: quantity_completeness = 0.948 < 0.95
2025-03-03 07:29:04.932 | ERROR    | data_quality.manager:run_monitors:142 - Error running Completeness Monitor: The truth value of a Index is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2025-03-03 07:29:04.932 | INFO     | data_quality.manager:run_monitors:123 - Running Outlier Monitor
2025-03-03 07:29:04.934 | INFO     | data_quality.manager:run_monitors:140 - Outlier Monitor completed with 0 alerts
2025-03-03 07:29:04.934 | INFO     | data_quality.manager:run_monitors:123 - Running Consistency Monitor
2025-03-03 07:29:04.934 | ERROR    | data_quality.base_monitor:add_alert:124 - Data quality alert: delivery_after_order_violation_ratio = 0.016 > 0.0
2025-03-03 07:29:04.934 | INFO     | data_quality.manager:run_monitors:140 - Consistency Monitor completed with 2 alerts
2025-03-03 07:29:04.935 | INFO     | data_quality.manager:save_results:210 - Saved data quality results to data_quality_reports/data_quality_lead_time_20250303_072904.json
2025-03-03 07:29:04.935 | INFO     | prediction.engine:train_model:179 - Training model: lead_time
2025-03-03 07:29:04.940 | ERROR    | prediction.models.lead_time:train:188 - Error training lead time prediction model: Input X contains NaN.
RandomForestRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
